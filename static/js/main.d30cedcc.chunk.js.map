{"version":3,"sources":["icons/second.svg","icons/idea.svg","icons/robotics.svg","components/Main.tsx","components/Footer.tsx","components/Navbar.tsx","icons/ai.svg","components/Preview.tsx","icons/rob.svg","components/Board.tsx","containers/TodoForm.tsx","containers/TodoList.tsx","icons/automation.svg","icons/clipboard.svg","icons/learning.svg","components/General.tsx","icons/feelings.svg","components/Conclusion.tsx","Pages.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Main","className","src","Robotics","alt","Second","Idea","Footer","Navbar","href","Preview","Ai","Board","Rob","TodoForm","onAdd","ref","useRef","placeholder","id","type","onKeyPress","event","key","current","value","htmlFor","TodoList","todos","onToggle","onRemove","length","map","todo","classes","completed","push","join","checked","onChange","bind","note","onClick","preventDefault","removeHandler","General","Automation","Clipboard","Learning","Conclusion","Feelings","Pages","useState","setTodos","useEffect","saved","JSON","parse","localStorage","getItem","setItem","stringify","Fragment","newTodo","Date","now","prev","confirm","filter","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d30cedcc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/second.1b124d6d.svg\";","export default __webpack_public_path__ + \"static/media/idea.ef22df92.svg\";","export default __webpack_public_path__ + \"static/media/robotics.43d0a18d.svg\";","import React from \"react\";\nimport Second from \"../icons/second.svg\";\nimport Idea from \"../icons/idea.svg\";\nimport Robotics from \"../icons/robotics.svg\";\n\nconst Main: React.FC = () => {\n  return (\n    <div className=\"row content_mt\">\n      <div className=\"col s12\">\n        <div className=\"row\">\n          <div className=\"col s12\">\n            <div className=\"card hoverable\">\n              <div className=\"card-image\">\n                <img className=\"icons\" src={Robotics} alt=\"\" />\n              </div>\n              <div className=\"card-content\">\n                <p>\n                  Подумайте, какими путями можно достичь целей, которые вы перед\n                  собой поставили\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"col s12 m6\">\n        <div className=\"row\">\n          <div className=\"col s12\">\n            <div className=\"card hoverable\">\n              <div className=\"card-image\">\n                <img className=\"icons\" src={Second} alt=\"\" />\n              </div>\n              <div className=\"card-content\">\n                <p>Подумайте о том, что для вас важно</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"col s12 m6\">\n        <div className=\"row\">\n          <div className=\"col s12\">\n            <div className=\"card hoverable\">\n              <div className=\"card-image\">\n                <img className=\"icons\" src={Idea} alt=\"\" />\n              </div>\n              <div className=\"card-content\">\n                <p>Попробуйте понять, каким вы хотите стать в будущем</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\n\nconst Footer: React.FC = () => {\n  return (\n    <footer className=\"page-footer purple darken-3 body\">\n      <div className=\"container main\">\n        <div className=\"row\">\n          <div className=\"col l12 s12 \">\n            <h3 className=\"white-text text\">Robot Memory</h3>\n            <p className=\"grey-text text-lighten-4\">\n              You cannot change the direction of the wind, but you can always\n              raise the sails to reach your goal\n            </p>\n          </div>\n        </div>\n      </div>\n      <div className=\"footer-copyright purple darken-4\">\n        <div className=\"container\">\n          © 2021 Robot Memory made by Philipp Timokhin\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\n\nconst Navbar: React.FC = () => {\n  return (\n    <div className=\"navbar-fixed\">\n      <nav>\n        <div className=\"nav-wrapper purple darken-4\">\n          <a href=\"/\" className=\"logo left\">\n            <h5 className=\"text\">Robot Memory</h5>\n          </a>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default Navbar;\n","export default __webpack_public_path__ + \"static/media/ai.6e2079be.svg\";","import React from \"react\";\nimport Ai from \"../icons/ai.svg\";\n\nconst Preview = () => {\n  return (\n    <div className=\"row\">\n      <div className=\"col s12  preview_color\">\n        <img className=\"preview\" src={Ai} alt=\"chatbot\" />\n        <h4 className=\"text_pr\">Добьемся цели вместе.</h4>\n        <h5 className=\"text_pr\">\n          Записывайте свои цели и достигайте вместе с Robot Memory\n        </h5>\n      </div>\n    </div>\n  );\n};\n\nexport default Preview;\n","export default __webpack_public_path__ + \"static/media/rob.0119280d.svg\";","import React from \"react\";\nimport Rob from \"../icons/rob.svg\";\n\nconst Board: React.FC = () => {\n  return (\n    <div className=\"row\">\n      <div className=\"col s12  preview_color\">\n        <img className=\"preview\" src={Rob} alt=\"nano\" />\n        <h4 className=\"text_pr\">Получить списки дел из вашей головы</h4>\n        <h5 className=\"text_pr\">\n          Хватит думать о вашем списке дел - позвольте приложению Robot Memory\n          помнить всё о вас\n        </h5>\n      </div>\n    </div>\n  );\n};\n\nexport default Board;\n","import React, { useRef } from \"react\";\n\ninterface TodoFormProps {\n  onAdd(title: string): void;\n}\n\nconst TodoForm: React.FC<TodoFormProps> = ({ onAdd }) => {\n  const ref = useRef<HTMLInputElement>(null);\n  const keyPressHandler = (event: React.KeyboardEvent) => {\n    if (event.key === \"Enter\") {\n      onAdd(ref.current!.value);\n      ref.current!.value = \"\";\n    }\n  };\n  return (\n    <div className=\"container\">\n      <input\n        placeholder=\"Please, enter your note\"\n        id=\"text\"\n        type=\"text\"\n        className=\"validate center\"\n        ref={ref}\n        onKeyPress={keyPressHandler}\n      />\n      <label htmlFor=\"text\">Please, enter your note</label>\n    </div>\n  );\n};\n\nexport default TodoForm;\n","import React from \"react\";\nimport { Itodo } from \"../interface\";\n\ntype TodoListProps = {\n  todos: Itodo[];\n  onToggle(id: number): void;\n  onRemove: (id: number) => void;\n};\nconst TodoList: React.FC<TodoListProps> = ({ todos, onToggle, onRemove }) => {\n  if (todos.length === 0) {\n    return <p className=\"center\">Пока дел нет</p>;\n  }\n\n  const removeHandler = (event: React.MouseEvent, id: number) => {\n    event.preventDefault();\n    onRemove(id);\n  };\n\n  return (\n    <ul>\n      {todos.map((todo) => {\n        const classes = [\"todo\"];\n        if (todo.completed) {\n          classes.push(\"completed\");\n        }\n\n        return (\n          <li className={classes.join(\" \")} key={todo.id}>\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={todo.completed}\n                onChange={onToggle.bind(null, todo.id)}\n              />\n              <span>{todo.note}</span>\n              <i\n                className=\"material-icons purple-text\"\n                onClick={(event) => removeHandler(event, todo.id)}\n              >\n                delete\n              </i>\n            </label>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\nexport default TodoList;\n","export default __webpack_public_path__ + \"static/media/automation.7b107149.svg\";","export default __webpack_public_path__ + \"static/media/clipboard.9a3ae692.svg\";","export default __webpack_public_path__ + \"static/media/learning.e91c7ebf.svg\";","import React from \"react\";\nimport Automation from \"../icons/automation.svg\";\nimport Clipboard from \"../icons/clipboard.svg\";\nimport Learning from \"../icons/learning.svg\";\n\nconst General: React.FC = () => {\n  return (\n    <div className=\"row content_mt\">\n      <div className=\"col s12\">\n        <div className=\"row\">\n          <div className=\"col s12\">\n            <div className=\"card hoverable\">\n              <div className=\"card-image\">\n                <img className=\"icons\" src={Automation} alt=\"\" />\n              </div>\n              <div className=\"card-content\">\n                <p>\n                  Очень важно понять, что именно вы ответственны за достижение\n                  этой цели\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"col s12 m6\">\n        <div className=\"row\">\n          <div className=\"col s12\">\n            <div className=\"card hoverable\">\n              <div className=\"card-image\">\n                <img className=\"icons\" src={Clipboard} alt=\"\" />\n              </div>\n              <div className=\"card-content\">\n                <p>Постарайтесь позитивно сформулировать свои цели</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"col s12 m6\">\n        <div className=\"row\">\n          <div className=\"col s12\">\n            <div className=\"card hoverable\">\n              <div className=\"card-image\">\n                <img className=\"icons\" src={Learning} alt=\"\" />\n              </div>\n              <div className=\"card-content\">\n                <p>\n                  Вы должны ставить цели, когда точно знаете, какой результат\n                  хотите получить\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default General;\n","export default __webpack_public_path__ + \"static/media/feelings.98550715.svg\";","import React from \"react\";\nimport Feelings from \"../icons/feelings.svg\";\n\nconst Conclusion: React.FC = () => {\n  return (\n    <div className=\"row\">\n      <div className=\"col s12  preview_color\">\n        <img className=\"preview\" src={Feelings} alt=\"nano\" />\n        <h4 className=\"text_pr\">Сформируйте свой список дел уже сейчас</h4>\n        <h5 className=\"text_pr\">\n          Просто напишите свою цель или задачу, которую нужно достичь или\n          решить. Удачи!\n        </h5>\n      </div>\n    </div>\n  );\n};\n\nexport default Conclusion;\n","import React, { useEffect, useState } from \"react\";\n\nimport Main from \"./components/Main\";\nimport Footer from \"./components/Footer\";\nimport Navbar from \"./components/Navbar\";\nimport Preview from \"./components/Preview\";\nimport Board from \"./components/Board\";\nimport TodoForm from \"./containers/TodoForm\";\nimport { Itodo } from \"./interface\";\nimport TodoList from \"./containers/TodoList\";\nimport General from \"./components/General\";\nimport Conclusion from \"./components/Conclusion\";\n\ndeclare var confirm: (question: string) => boolean;\n\nconst Pages: React.FC = () => {\n  const [todos, setTodos] = useState<Itodo[]>([]);\n\n  useEffect(() => {\n    const saved = JSON.parse(localStorage.getItem(\"todos\") || \"[]\") as Itodo[];\n    setTodos(saved);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n\n  const addHandler = (note: string) => {\n    const newTodo: Itodo = {\n      note: note,\n      id: Date.now(),\n      completed: false,\n    };\n    setTodos((prev) => [newTodo, ...prev]);\n  };\n\n  const toggleHandler = (id: number) => {\n    setTodos((prev) =>\n      prev.map((todo) => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      })\n    );\n  };\n\n  const removeHandler = (id: number) => {\n    const shoudRemove = confirm(\"Вы уверены, что хотите удалить элемент?\");\n    if (shoudRemove) {\n      setTodos((prev) => prev.filter((todo) => todo.id !== id));\n    }\n  };\n  return (\n    <React.Fragment>\n      <Navbar />\n      <Preview />\n      <Main />\n      <Board />\n      <General />\n      <Conclusion />\n      <TodoForm onAdd={addHandler} />\n      <TodoList\n        todos={todos}\n        onToggle={toggleHandler}\n        onRemove={removeHandler}\n      />\n      <Footer />\n    </React.Fragment>\n  );\n};\n\nexport default Pages;\n","import React from \"react\";\nimport \"./App.css\";\nimport Pages from \"./Pages\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Pages />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}